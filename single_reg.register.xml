<?xml version="1.0" encoding="UTF-8" ?>
<register-automaton>
  // P = vx.a!(x).0 | a?(z).0
  <alphabet>
    <inputs>
      <symbol name="ISend">
        <param name="p0" type="int" />
        <param name="p1" type="int" />
      </symbol>
      <!-- <symbol name="IFreshSend">
        <param name="p0" type="int" />
        <param name="p1" type="int" />
      </symbol> -->
      <symbol name="IReceive">
        <param name="p0" type="int" />
        <param name="p1" type="int" />
      </symbol>
      <symbol name="ITau" />
      <symbol name="IDummy">
        <param name="p0" type="int" />
      </symbol>

    </inputs>

    <outputs>
      <symbol name="OOK" />
      <symbol name="OFINAL" />
      <symbol name="Oquiescence" />
    </outputs>
  </alphabet>

  <globals>
    <variable type="int" name="r1">0</variable>
    <!-- <variable type="int" name="r2">0</variable> -->
  </globals>

  <locations>
    <location name="s0" initial="true" />
    <location name="s1" />
    <location name="q0" />
    <location name="p1" />
    <location name="q1" />
    <location name="p2" />
    <location name="q2" />
    <location name="p3" />
    <location name="sink" />
    <location name="sink_two" />
  </locations>

  <transitions>
    <transition from="sink" to="sink_two" symbol="Oquiescence" />
    <transition from="s0" to="sink" symbol="IReceive" params="x1, x2" />
    <transition from="s0" to="sink" symbol="ISend" params="x1, x2" />
    <transition from="s0" to="sink" symbol="ITau" />


    <transition from="s0" to="s1" symbol="IDummy" params="x1">
      <assignments>
        <assign to="r1">x1</assign>
      </assignments>
    </transition>

    <transition from="s1" to="q0" symbol="OOK" />

    <transition from="q0" to="p1" symbol="ISend" params="x1,x2">
      <guard>r1==x1 &amp;&amp; r1!=x2</guard>
      <!-- <assignments>
        <assign to="r2">x2</assign>
      </assignments> -->
    </transition>

    <transition from="q0" to="sink" symbol="IDummy" params="x1" />
    <transition from="q0" to="sink" symbol="IReceive" params="x1, x2">
      <guard> r1!=x1
      </guard>
    </transition>
    <transition from="q0" to="sink" symbol="ISend" params="x1, x2">
      <guard>r1!=x1 || r1==x2</guard>
    </transition>

    <transition from="q1" to="p3" symbol="IReceive" params="x1,x2">
      <guard> r1==x1
      </guard>
    </transition>
    <transition from="q1" to="sink" symbol="IDummy" params="x1" />
    <transition from="q1" to="sink" symbol="ISend" params="x1, x2" />
    <transition from="q1" to="sink" symbol="ITau" />
    <transition from="q1" to="sink" symbol="IReceive" params="x1, x2">
      <guard> r1!=x1
      </guard>
    </transition>

    <transition from="q0" to="p2" symbol="IReceive" params="x1,x2">
      <guard> r1==x1
      </guard>
      <!-- <assignments>
        <assign to="r2">x2</assign>
      </assignments> -->
    </transition>

    <transition from="q2" to="p3" symbol="ISend" params="x1,x2">
      <guard> r1==x1 &amp;&amp; r1!=x2
      </guard>
      <!-- <guard> r1==x1 &amp;&amp; (r1!=x2 &amp;&amp; r2!=x2)
      </guard> -->
    </transition>
    <transition from="q2" to="sink" symbol="IDummy" params="x1" />
    <transition from="q2" to="sink" symbol="ISend" params="x1, x2">
      <guard> r1!=x1
      </guard>
      <!-- <guard> r1!=x1 || (r2==x1 || r2==x2)
      </guard> -->
    </transition>
    <transition from="q2" to="sink" symbol="IReceive" params="x1, x2" />
    <transition from="q2" to="sink" symbol="ITau" />

    <transition from="q0" to="p3" symbol="ITau" />
    <transition from="p1" to="q1" symbol="OOK" />
    <transition from="p2" to="q2" symbol="OOK" />
    <transition from="p3" to="sink_two" symbol="OFINAL" />


    <transition from="sink_two" to="sink" symbol="IDummy" params="x1" />
    <transition from="sink_two" to="sink" symbol="IReceive" params="x1, x2" />
    <transition from="sink_two" to="sink" symbol="ISend" params="x1, x2" />
    <transition from="sink_two" to="sink" symbol="ITau" />
  </transitions>

</register-automaton>
